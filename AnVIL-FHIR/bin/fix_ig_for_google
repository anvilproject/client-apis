#!/usr/bin/env python3

"""Strip problematic parameters from generated IG."""

# otherwise google complains
# "an error occurred while reading the record starting at byte 0: at ImplementationGuide.definition.parameter[0].code: code type mismatch: "copyrightyear" is not a GuideParameterCode
# at ImplementationGuide.definition.parameter[1].code: code type mismatch: "releaselabel" is not a GuideParameterCode"


import os
import json
import logging


logging.basicConfig(level=logging.INFO, format='%(asctime)s %(filename)s %(levelname)-8s %(message)s')

# PROBLEMATIC_PARAMETERS = ['copyrightyear', 'releaselabel']
# assert 'IMPLEMENTATION_GUIDE_PATH' in os.environ, "Please set IMPLEMENTATION_GUIDE_PATH"
# path = f"{os.environ['IMPLEMENTATION_GUIDE_PATH']}/ImplementationGuide-NCPI-FHIR-Implementation-Guide.json"

# implementation_guide = json.load(open(path, "r"))
# stripped_parameters = [p for p in implementation_guide['definition']['parameter'] if p.get('code',None) not in PROBLEMATIC_PARAMETERS]
# implementation_guide['definition']['parameter'] = stripped_parameters
# json.dump(implementation_guide, open(path, "w"), indent=2)
# logging.getLogger(__name__).info(f"re-wrote IG, stripped {PROBLEMATIC_PARAMETERS}")


assert 'OUTPUT_PATH' in os.environ, "Please set OUTPUT_PATH"

OUTPUT_PATH = os.environ['OUTPUT_PATH']

ig_path = f'{OUTPUT_PATH}/IG/ImplementationGuide-NCPI-FHIR-Implementation-Guide.json'
ig = json.load(open(ig_path,'r'))
# items to add to global
structure_definitions = [r['reference' ]['reference' ] for r in ig['definition' ]['resource' ] if 'StructureDefinition' in r['reference' ]['reference' ] ]

ig_global = []
for id in structure_definitions:
    id = id.replace('/', '-')
    sd_path = f'{OUTPUT_PATH}/IG/{id}.json'
    sd = json.load(open(sd_path,'r'))
    if sd['kind'] != 'resource':
        continue
    ig_global.append({'type': sd['type'], 'profile': sd['url']})    

ig['global'] = ig_global

print(f"added to 'global' {[g['type'] for g in ig['global']]}")
json.dump(ig, open(ig_path,'w'), separators=(',', ':'))
